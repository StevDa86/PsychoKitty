name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup Dummy API-Keys
        run: |
          touch apikey.properties
          echo ADMOB_ID='"ca-app-pub-3940256099942544~3347511713"' >> apikey.properties
          echo BANNER_AD_UNIT_ID='"ca-app-pub-3940256099942544/6300978111"' >> apikey.properties
          cat apikey.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - name: Cache SonarCloud packages
        if: env.SONAR_TOKEN != ''
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build
        run: ./gradlew build --no-daemon

      - name: Check SonarCloud Configuration
        if: env.SONAR_TOKEN != ''
        run: |
          echo "SONAR_TOKEN is configured"
          echo "Project Key: StevDa86_PsychoKitty"
          echo "Organization: stevda86"

      - name: Run SonarQube analysis
        if: env.SONAR_TOKEN != '' && github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar --no-daemon --info \
            -Dsonar.qualitygate.wait=false
        continue-on-error: true

      - name: SonarQube analysis for PRs
        if: env.SONAR_TOKEN != '' && github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar --no-daemon --info \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            -Dsonar.qualitygate.wait=false
        continue-on-error: true
